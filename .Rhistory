Sys.setenv(LANGUAGE = "en")
ZOrigem <- read.csv("D:/CM/ADPT/ZOrigem.csv", header=FALSE)
View(ZOrigem)
View(ZOrigem)
View(ZOrigem)
#"D:/CM/ADPT"
ZOrigem <- read.csv("D:/CM/ADPT/ZOrigem.csv", header=TRUE)
#"D:/CM/ADPT"
ZOrigem <- read.csv("D:/CM/ADPT/ZOrigem.csv", header=TRUE)
ZOrigem <- read.csv("D:/CM/ADPT/ZOrigem.csv")
View(ZOrigem)
names(ZOrigem)
head(ZOrigem)
str(ZOrigem)
View($Trem_16)
odJuntada <- read.csv("D:/CM/ADPT/odJuntada.csv")
View(odJuntada)
str(odJuntada)
odJuntada = od
odJuntada <- od
print(od)
mean(odJuntada$popFem, na.rm = TRUE)
boxplot(odJuntada$viagProduz)
boxplot(odJuntada$populacao)
hist(odJuntada$populacao)
qqline(odJuntada$populacao, col = "blue")
qqline(odJuntada$populacao, col = "blue")
qqline(odJuntada$populacao, col = "red")
qqnorm(odJuntada$populacao)
qqline(odJuntada$populacao, col = "red")
install.packages("tidyverse")
library(tidyverse)
#RODAR SEMPRE PARA CARREGAR A LIB
library(tidyverse)
library(corrplot)
library(Hmisc)
od$tmv_totalModal
od["tmv_totalModal"] <- od$tmv_coletivo + od$tmv_individual + od$tmv_pe + od$tmv_bike
od <- read.csv("D:/CM/ADPT/dados/od.csv")
od["tmv_totalModal"] <- od$tmv_coletivo + od$tmv_individual + od$tmv_pe + od$tmv_bike
od$tmv_totalModal
plot(x = od$renPerCap,
y = od$tmv_totalModal)
plot(x = od$renPerCap,
y = od$tmv_totalModal
xlab = "Renda Per Capita",
plot(x = od$renPerCap,
y = od$tmv_totalModal,
xlab = "Renda Per Capita",
ylab = "∑ Tempo medio de viagem")
plot(x = od$renPerCap,
y = od$tmv_totalModal,
xlab = "Renda Per Capita",
ylab = "∑ tempo medio de viagem")
plot(x = od$renPerCap,
y = od$tmv_totalModal,
xlab = "Renda Per Capita",
ylab = "∑ tempo medio de viagem (min)")
od["tmv_mediaTotalModal"] <- od$tmv_totalModal/4
od$tmv_mediaTotalModal
plot(x = od$renPerCap,
y = od$tmv_mediaTotalModal,
xlab = "Renda Per Capita",
ylab = "Media dos tempo medio de viagem (min)")
#Coeficiente de correlação
cor(x = od$renPerCap,
y = od$tmv_mediaTotalModal,
method = "pearson",
use = "complete.obs")
# Resultado - >  0.3256155
od$tmv_mediaTotalModal
plot(x = od$renPerCap,
y = od$tmv_coletivo)
plot(x = od$renPerCap,
y = od$tmv_individual)
plot(x = od$renPerCap,
y = od$tmv_pe)
plot(x = od$renPerCap,
y = od$tmv_bike)
cor.test(x = od$renPerCap,
y = od$tmv_mediaTotalModal,
method = "pearson"
alternative = "two.sided",
cor.test(x = od$renPerCap,
y = od$tmv_mediaTotalModal,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
plot(x = od$renPerCap,
y = od$tmv_coletivo)
plot(x = od$renPerCap,
y = od$tmv_coletivo,
xlab = "Renda per capita"
ylab = "Tempo medio de viagens em transporte coletivo")
plot(x = od$renPerCap,
y = od$tmv_coletivo,
xlab = "Renda per capita",
ylab = "Tempo medio de viagens em transporte coletivo")
plot(x = od$renPerCap,
y = od$tmv_coletivo,
xlab = "Renda per capita",
ylab = "Tempo medio de viagens em transporte coletivo (min)")
#Coeficiente de correlação
cor(x = od$renPerCap,
y = od$tmv_coletivo,
method = "pearson",
use = "complete.obs")
cor.test(x = od$renPerCap,
y = od$tmv_coletivo,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
#Renda media / TMV Individual
plot(x = od$renPerCap,
y = od$tmv_individual,
xlab = "Renda per capita",
ylab = "Tempo medio de viagens em transporte individual (min)")
#Coeficiente de correlação
cor(x = od$renPerCap,
y = od$tmv_individual,
method = "pearson",
use = "complete.obs")
cor.test(x = od$renPerCap,
y = od$tmv_individual,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
#Renda media / TMV A Pe
plot(x = od$renPerCap,
y = od$tmv_pe,
xlab = "Renda per capita",
ylab = "Tempo medio de viagens em a pe (min)")
#Coeficiente de correlação
cor(x = od$renPerCap,
y = od$tmv_pe,
method = "pearson",
use = "complete.obs")
cor.test(x = od$renPerCap,
y = od$tmv_pe,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
#Renda media / TMV Bike
plot(x = od$renPerCap,
y = od$tmv_bike,
xlab = "Renda per capita",
ylab = "Tempo medio de viagens em bicicleta (min)")
#Coeficiente de correlação
cor(x = od$renPerCap,
y = od$tmv_bike,
method = "pearson",
use = "complete.obs")
cor.test(x = od$renPerCap,
y = od$tmv_bike,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
ggplot(data = od, aes(x = renPerCap, y =tmv_somaTotalModal))+
geom_point() +
geom_smooth(data = lm(formula = tmv_somaTotalModal ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +
theme_bw() +
xlab("Renda per capita") +
ylab("∑ tempo medio de viagem (min)")
ggplot(data = od, aes(x = renPerCap, y =tmv_somaTotalModal)) +   geom_point() +   geom_smooth(data = lm(formula = tmv_somaTotalModal ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda per capita") +   ylab("∑ tempo medio de viagem (min)")
ggplot(data = od, aes(x = renPerCap, y =tmv_TotalModal)) +   geom_point() +   geom_smooth(data = lm(formula = tmv_TotalModal ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda per capita") +   ylab("∑ tempo medio de viagem (min)")
od["tmv_somaTotalModal"] <- od$tmv_coletivo + od$tmv_individual + od$tmv_pe + od$tmv_bike
od$tmv_somaTotalModal
ggplot(data = od, aes(x = renPerCap, y =tmv_somaTotalModal)) +   geom_point() +   geom_smooth(data = lm(formula = tmv_somaTotalModal ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda per capita") +   ylab("∑ tempo medio de viagem (min)")
ggplot(data = od, aes(x = renPerCap, y =tmv_mediaTotalModal)) +   geom_point() +   geom_smooth(data = lm(formula = tmv_mediaTotalModal ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda per capita") +   ylab("∑ tempo medio de viagem (min)")
ggplot(data = od, aes(x = renPerCap, y =tmv_mediaTotalModal)) +   geom_point() +   geom_smooth(data = lm(formula = tmv_mediaTotalModal ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda per capita") +   ylab("Media dos tempo medio de viagem (min)")
ggplot(data = od, aes(x = renPerCap, y =tmv_individual)) +   geom_point() +   geom_smooth(data = lm(formula = tmv_individual ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda per capita") +   ylab("Tempo medio de viagens em transporte individual (min)")
cor.test(x = od$renPerCap,
y = od$tmv_bike,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
ggplot(data = od, aes(x = renPerCap, y =tmv_pe)) +   geom_point() +   geom_smooth(data = lm(formula = tmv_pe ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda per capita") +   ylab("Tempo medio de viagens em a pe (min)")
#RODAR SEMPRE PARA CARREGAR A LIB
library(tidyverse)
library(corrplot)
library(Hmisc)
ggplot(data = od, aes(x = renPerCap, y =tmv_pe)) +   geom_point() +   geom_smooth(data = lm(formula = tmv_pe ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda per capita") +   ylab("Tempo medio de viagens em a pe (min)")
ggplot(data = od, aes(x = renPerCap, y =tmv_bike)) +   geom_point() +   geom_smooth(data = lm(formula = tmv_bike ~ renPerCap, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda per capita") +   ylab("Tempo medio de viagens em bicicleta (min)")
cor.test(x = od$renPerCap,
y = od$tmv_coletivo,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
#RODAR SEMPRE PARA CARREGAR A LIB
library(tidyverse)
library(corrplot)
library(Hmisc)
cor.test(x = od$renPerCap,
y = od$tmv_coletivo,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
plot(x = od$rendTotal,
y = od$viagAtraid,
xlab = "Renda total",
ylab = "Viagens atraidas")
ggplot(data = od, aes(x = rendTotal, y =tmv_pe)) +   geom_point() +   geom_smooth(data = lm(formula = viagAtraid ~ rendTotal, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda total") +   ylab("Viagens atraidas")
ggplot(data = od, aes(x = rendTotal, y =viagAtraid)) +   geom_point() +   geom_smooth(data = lm(formula = viagAtraid ~ rendTotal, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda total") +   ylab("Viagens atraidas")
#Coeficiente de correlação
cor(x = od$rendTotal,
y = od$viagAtraid,
method = "pearson",
use = "complete.obs")
cor.test(x = od$rendTotal,
y = od$viagAtraid,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
cor.test(x = od$rendTotal,
y = od$viagAtraid,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
od["popProdViagem"] <- od$populacao / od$viagProduz
od$popProdViagem
plot(x = od$popProdViagem,
y = od$viagAtraid/od$populacao,
xlab = "Renda total",
ylab = "Viagens atraías")
plot(x = od$renPerCap,
y = od$viagAtraid/od$populacao,
xlab = "Renda total",
ylab = "Viagens atraías")
ggplot(data = od, aes(x = rendTotal, y =viagAtraid)) +   geom_point() +   geom_smooth(data = lm(formula = viagAtraid ~ rendTotal, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda total") +   ylab("Viagens atraidas")
#RODAR SEMPRE PARA CARREGAR A LIB
library(tidyverse)
library(corrplot)
library(Hmisc)
viagem = od$renPerCap
plot(x = viagem,
y = od$viagAtraid/od$populacao,
xlab = "Renda total",
ylab = "Viagens atraías")
eixoY = od$viagAtraid/od$populacao
eixoX = od$renPerCap
plot(x = eixoX,
y = eixoY,
xlab = "Renda total",
ylab = "Viagens atraías")
ggplot(data = od, aes(x = eixoX, y = eixoY)) +   geom_point() +   geom_smooth(data = lm(formula = eixoX ~ eixoY, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda total") +   ylab("Viagens atraidas")
plot(x = eixoX,
y = eixoY,
xlab = "Renda total",
ylab = "Viagens atraías")
ggplot(data = od, aes(x = eixoX, y = eixoY)) +   geom_point() +   geom_smooth(data = lm(formula = eixoX ~ eixoY, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda total") +   ylab("Viagens atraidas")
ggplot(data = od, aes(x = eixoX, y = eixoY)) +   geom_point() +   geom_smooth(data = lm(formula = eixoY ~ eixoX, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda total") +   ylab("Viagens atraidas")
ggplot(data = od, aes(x = eixoX, y = eixoY)) +   geom_point() +   geom_smooth(data = lm(formula = eixoY ~ eixoX, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda total") +   ylab("Viagens atraidas")
cor.test(x = od$rendTotal,
y = od$viagAtraid,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
cor.test(x = od$rendTotal,
y = od$viagAtraid,
method = "pearson",
alternative = "two.sided",
conf.level = 0.95)
od["popAtratoraViag"] <- od$populacao / od$viagAtraid
od$popAtratoraViag
od["popAtratoraViag"] <- (od$populacao / od$viagAtraid) *100
od$popAtratoraViag
od["popAtratoraViag"] <- od$populacao / od$viagAtraid
od$popAtratoraViag
plot(x = od$popAtratoraViag,
y = od$empregos,
xlab = "Pop Atratora",
ylab = "Empregos")
ggplot(data = od, aes(x = popAtratoraViag, y =empregos)) +   geom_point() +   geom_smooth(data = lm(formula = popAtratoraViag ~ empregos, data = od), method = "lm", col = "red", se = FALSE) +   theme_bw() +   xlab("Renda total") +   ylab("Viagens atraidas")
ggplot(data = od, aes(x = popAtratoraViag, y =empregos)) +   geom_point() +   geom_smooth(data = lm(formula = popAtratoraViag ~ empregos, data = od), method = "lm", col = "blue", se = FALSE) +   theme_bw() +   xlab("Pop Atratora") +   ylab("Empregos")
plot(x = od$popProdViagem,
y = od$empregos,
xlab = "Pop Produtora",
ylab = "Empregos")
ggplot(data = od, aes(x = popProdViagem, y =empregos)) +   geom_point() +   geom_smooth(data = lm(formula = popProdViagem ~ empregos, data = od), method = "lm", col = "blue", se = FALSE) +   theme_bw() +   xlab("Pop Atratora") +   ylab("Empregos")
ggplot(data = od, aes(x = popProdViagem, y =empregos)) +   geom_point() +   geom_smooth(data = lm(formula = popProdViagem ~ empregos, data = od), method = "lm", col = "blue", se = FALSE) +   theme_bw() +   xlab("Pop Produtora") +   ylab("Empregos")
git pull
cd
setwd("D:/CM/ADPT")
git add .
getwd()
pesOD <- read.csv("~/ADPT/dados/pesOD.csv")
pesOD <- read.csv("D:/CM/ADPT/dados/pesOD.csv")
View(pesOD)
head(pesOD)
names(pesOD)
#Criando Campus de Somatorias
pesOD <- pesOD %>%
mutate(
tmv_somaTotalModal = tmv_coletivo + tmv_individual + tmv_pe + tmv_bike,
tmv_mediaTotalModal = tmv_somaTotalModal / 4,
crianças = ((popIdd_0.3 + popIdd_4.6 + popIdd_7.10) /popTotal )*100,
adolecentes = ((popIdd_11.14 + popIdd_15.17) /popTotal )*100,
jovens = ((popIdd_18.22 + popIdd_23.29) /popTotal) *100,
adultos = ((popIdd_30.39 + popIdd_40.49 + popIdd_50.59) / popTotal) *100,
idosos = popIdd_60.mais
)
#install.packages(dplyr)
library(dplyr)
#Criando Campus de Somatorias
pesOD <- pesOD %>%
mutate(
tmv_somaTotalModal = tmv_coletivo + tmv_individual + tmv_pe + tmv_bike,
tmv_mediaTotalModal = tmv_somaTotalModal / 4,
crianças = ((popIdd_0.3 + popIdd_4.6 + popIdd_7.10) /popTotal )*100,
adolecentes = ((popIdd_11.14 + popIdd_15.17) /popTotal )*100,
jovens = ((popIdd_18.22 + popIdd_23.29) /popTotal) *100,
adultos = ((popIdd_30.39 + popIdd_40.49 + popIdd_50.59) / popTotal) *100,
idosos = popIdd_60.mais
)
names(pesOD)
#Criando Taxas
pesOD <- pesOD %>%
mutate(
tax_rendF1 = (pesOD$rendF1 / pesOD$rendTotal) *100,
tax_rendF2 = (pesOD$rendF2 / pesOD$rendTotal) *100,
tax_rendF3 = (pesOD$rendF3 / pesOD$rendTotal) *100,
tax_rendF4 = (pesOD$rendF4 / pesOD$rendTotal) *100,
tax_rendF5 = (pesOD$rendF5 / pesOD$rendTotal) *100,
tax_vp_coletivoPub = ((vp_trem + vp_bus + vp_metro) / vp_total) * 100,
tax_vp_coletivoPri = ((vp_trem + vp_bus + vp_metro) / vp_total) * 100,
tax_vp_coletivoPub = ((vp_trem + vp_bus + vp_metro) / vp_total) * 100,
tax_vp_taxiCom = (vp_taxiCom / vp_total) *100,
tax_vp_taxiNCom = (vp_taxiNCom / vp_total) *100,
tax_vp_auto = ((vp_passAuto + vp_dirigindoAuto) /vp_total) *100,
tax_vp_moto = ((vp_passMoto + vp_passAuto) /vp_total) *100,
tax_vp_pe = (vp_pe / vp_total) * 100,
tax_vp_bike = (vp_bike / vp_total) * 100,
tax_crianças = ((popIdd_0.3 + popIdd_4.6 + popIdd_7.10) /popTotal )*100,
tax_adolecentes = ((popIdd_11.14 + popIdd_15.17) /popTotal )*100,
tax_jovens = ((popIdd_18.22 + popIdd_23.29) /popTotal) *100,
tax_adultos = ((popIdd_30.39 + popIdd_40.49 + popIdd_50.59) / popTotal) *100,
tax_idosos = (popIdd_60.mais / popTotal) *100,
tax_popArea = (populacao /areaZona) *100,
tax_genFem = (popFem / populacao) *100,
tax_genMas = (popMasc / populacao) *100
)
names(pesOD)
head(pesOD)
pesOD <- read.csv("~/ADPT/dados/pesOD.csv")
head(pesOD)
#Criando Taxas
pesOD <- pesOD %>%
mutate(
tax_rendF1 = (pesOD$rendF1 / pesOD$rendTotal) *100,
tax_rendF2 = (pesOD$rendF2 / pesOD$rendTotal) *100,
tax_rendF3 = (pesOD$rendF3 / pesOD$rendTotal) *100,
tax_rendF4 = (pesOD$rendF4 / pesOD$rendTotal) *100,
tax_rendF5 = (pesOD$rendF5 / pesOD$rendTotal) *100,
tax_vp_coletivoPub = ((vp_trem + vp_bus + vp_metro) / vp_total) * 100,
tax_vp_coletivoPri = ((vp_trem + vp_bus + vp_metro) / vp_total) * 100,
tax_vp_coletivoPub = ((vp_trem + vp_bus + vp_metro) / vp_total) * 100,
tax_vp_taxiCom = (vp_taxiCom / vp_total) *100,
tax_vp_taxiNCom = (vp_taxiNCom / vp_total) *100,
tax_vp_auto = ((vp_passAuto + vp_dirigindoAuto) /vp_total) *100,
tax_vp_moto = ((vp_passMoto + vp_passAuto) /vp_total) *100,
tax_vp_pe = (vp_pe / vp_total) * 100,
tax_vp_bike = (vp_bike / vp_total) * 100,
tax_crianças = ((popIdd_0.3 + popIdd_4.6 + popIdd_7.10) /popTotal )*100,
tax_adolecentes = ((popIdd_11.14 + popIdd_15.17) /popTotal )*100,
tax_jovens = ((popIdd_18.22 + popIdd_23.29) /popTotal) *100,
tax_adultos = ((popIdd_30.39 + popIdd_40.49 + popIdd_50.59) / popTotal) *100,
tax_idosos = (popIdd_60.mais / popTotal) *100,
tax_popArea = (populacao /areaZona) *100,
tax_genFem = (popFem / populacao) *100,
tax_genMas = (popMasc / populacao) *100
)
#RODAR SEMPRE PARA CARREGAR A LIB
library(tidyverse)
library(corrplot)
library(Hmisc)
getwd()
od <- read.csv("D:/CM/ADPT/dados/od.csv")
head(od)
Dispercao = function (df, dadox , dadoy, labelDadoX, labelDadoy) {
#PLOT
plot(x = dadox,
y = dadoy,
xlab = labelDadoX,
ylab = labelDadoy)
fd <- na.omit(fd) # Remove observações com valores NA
# Remove observações com valores ausentes ou infinitos da variável y
data_clean <- na.omit(df)
# Ajustar o modelo de regressão linear com os dados limpos
lm_model <- lm(y ~ x, data = data_clean)
#GGPLOT
ggplot(data = fd, aes(x = dadox, y = dadoy)) +
geom_point() +   geom_smooth(data = lm(formula = dadoy ~ dadox, data = df),
method = "lm", col = "red", se = FALSE) + theme_bw() +
xlab(labelDadoX) +
ylab(labelDadoy)
}
od["tmv_somaTotalModal"] <- od$tmv_coletivo + od$tmv_individual + od$tmv_pe + od$tmv_bike
od$tmv_somaTotalModal
Dispercao(od, od$renPerCap, od$tmv_somaTotalModal, "Renda Per Capita", "∑ tempo medio de viagem (min)")
Dispercao(od, od$renPerCap, od$tmv_somaTotalModal)
Dispercao(od, od$renPerCap, od$tmv_somaTotalModal, "Renda Per Capita")
Dispercao(od, od$renPerCap, od$tmv_somaTotalModal, "Renda Per Capita", "∑ tempo medio de viagem (min)")
